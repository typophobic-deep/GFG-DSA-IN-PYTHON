class myhash:
    def __init__ (self,c):
        self.cap=c
        self.table=[-1]*c
        self.size=0
    def hash (self,x):
        return x%self.cap
    def search(self,x):
        t=self.table
        h=self.hash(x)
        i=h
        while t[i] != -1:
            if t[i]==x:
                return True
            i=(i+1)%self.cap
            if i==h:
                return False
        return False
    def insert(self,x):
        if self.size==self.cap:
            return False
        if self.search(x)==True:
            return False
        t=self.table
        i=self.hash(x)  
        while t[i] not in (-1,-2):
            i=(i+1)%self.cap
        t[i]=x
        self.size=self.size+1
        return True
    def delete(self,x):
        t=self.table
        h=self.hash(x)
        i=h
        while t[i] != -1:
            if t[i]==x:
                t[i] = -2
                return True
            i=(i+1)%self.cap


            if i==h:
                return False
        return False        



h=myhash(9)
h.insert(15)  
h.insert(25)  
print(h.search(25))    
print(h.search(19))
print(h.search(26))
h.delete(25)
print(h.search(25))    


                    



        